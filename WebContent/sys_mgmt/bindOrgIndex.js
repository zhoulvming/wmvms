/*
 * File: designer.js Date: Mon Oct 10 2011 21:21:06 GMT+0800 (SGT)
 * 
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 * 
 * This file will be auto-generated each and everytime you export.
 * 
 * Do NOT hand edit this file.
 */

Ext.Loader.setConfig({
	enabled : true
});

Ext
		.application({
			name : 'OrgMgmtApp',
			stores : [

			],

			addFormField : function(_form) {
				_form.bodyPadding = 5;
				_form.padding = "0px 0px 0px 0px";
				_form.add({
					xtype : "textfield",
					fieldLabel : 'ID',
					labelWidth : 150,
					name : 'id',
					itemId : 'id',
					align : 'center',
					anchor : '90%',
					hidden : true
				}, {
					xtype : "textfield",
					labelWidth : 150,
					name : 'type',
					itemId : 'type',
					value : '2',
					align : 'center',
					anchor : '90%',
					hidden : true
				}, {
					xtype : "textfield",
					fieldLabel : '名称',
					labelWidth : 150,
					name : 'name',
					itemId : 'name',
					align : 'center',
					anchor : '90%',
					allowBlank : false,
					emptyText : '请输入机构名称'
				}, {
					xtype : "textarea",
					fieldLabel : '备注',
					labelWidth : 150,
					name : 'comments',
					itemId : 'comments',
					align : 'center',
					anchor : '90%',
					height : 100

				});

			},

			createOpenWin : function(_param) {
				if (!_param) {
					_param = '';
				}
				return Ext
						.create(
								'Ext.Window',
								{
									title : '角色列表',
									layout : 'fit',
									itemId : 'openedWin',
									height : 455,
									width : 728,
									html : '<iframe style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; width: 728px; height: 455px; border-right-width: 0px" src="roleIndex.html?flag=popup'
											+ _param
											+ '" frameborder="0" width="100%" scrolling="no" height="100%"></iframe>',
								});
			},
			launch : function() {
				Ext.QuickTips.init();
				var cmp = Ext.create('util.BaseViewport', {
					renderTo : Ext.getBody()

				});
				cmp.initCommonUrl('Organization');
				var me = this;

				var asyncTree2 = ExtjsCmp
						.createTree('../services/org/loadOrg?type=1');
				asyncTree2.setTitle('用车单位');
				var tb = cmp.getComponent('actionToolbar');
				var operateNote = cmp.getComponent('operatePanel')
						.getComponent('operateNote');
				tb.getComponent('add').setVisible(false);
				tb.getComponent('del').setVisible(false);
				tb.getComponent('edit').setVisible(false);
				var refWin = null;
				cmp.beforeAddWin = function getAddedField(_win) {
					_win.setHeight(400);
					_win.setWidth(600);

					var addForm = _win.getComponent('editForm');
					me.addFormField(addForm);
					addForm.doLayout();
					_win.doLayout();

				};

				cmp.beforeEditWin = function getAddedField(_win) {
					_win.setHeight(400);
					_win.setWidth(600);
					var editForm = _win.getComponent('editForm');
					me.addFormField(editForm);
					editForm.doLayout();
				};

				cmp.afterRenderTable = function getChildData(_obj) {

				};

				var showRole = Ext.create('Ext.Button', {
					text : '查看角色',
					icon : '../image/edit.png',
					listeners : {
						click : function() {
							if (cmp.selectedGridId.length == 0) {
								Ext.Msg.alert('提示', '请选择一个用户');
								return false;
							}
							if (cmp.selectedGridId.length > 1) {
								Ext.Msg.alert('提示', '请只选择一个用户');
								return false;
							}
							var getRoleUrl = '../services/user/getRole?userId='
									+ cmp.selectedGridId[0];

							cmp.afterRenderTable = function getChildData(_obj) {

							};

							var win = Ext.create('Ext.Window', {
								title : '角色列表',
								layout : 'fit',
								itemId : 'openedWin',
								height : 450,
								width : 728,
							});
							var grid = cmp.createGrid(getRoleUrl, null, win);

						}
					}
				});

				// addition button
				var url = "../services/user/assignRole?";
				var childParams = Ext.create('Ext.form.field.Hidden', {
					id : 'paramshf',
					value : '',
					listeners : {
						click : function() {

						}

					}
				});

				childParams.on('change', function() {

					// alert("选择角色"+childParams.value);

					var roles = childParams.getValue().split(',');

					Ext.each(roles, function(role) {
						url = url + 'roleId=' + role + "&";

					});

				});

				var childParamName = Ext.create('Ext.form.field.Hidden', {
					id : 'paramsNamehf',
					value : '',
				});

				childParamName
						.on(
								'change',
								function() {

									// Ext.Msg.alert('提示', "选择角色" +
									// childParamName.value);
									if (cmp.selectedGridId.length <= 0) {

										return false;
									}
									Ext.each(cmp.selectedGridId, function(id) {
										url = url + 'userId=' + id + "&";

									});
									var msgBox = Ext
											.create(
													'Ext.window.MessageBox',
													{
														width : 300,
														height : 100,
														buttons : [
																{
																	text : '保存',
																	handler : function() {
																		Ext.Ajax
																				.request({
																					url : url,
																					scope : this,
																					method : 'GET',
																					success : function(
																							response,
																							opts) {

																						var obj = Ext
																								.decode(response.responseText);
																						Ext.Msg
																								.alert(
																										'提示',
																										obj.message);
																						msgBox
																								.close();
																					},
																					failure : function(
																							form,
																							action) {
																						Ext.Msg
																								.alert(
																										'提示',
																										'保存失败');
																						return false;
																					}
																				});

																	}
																},
																{
																	text : '取消',
																	handler : function() {
																		msgBox
																				.close();
																	}
																} ]
													});

									msgBox.show({
										title : '提示',
										msg : '当前选择角色' + childParamName.value,
										icon : Ext.Msg.QUESTION,
										modal : true,
									// fn : function(btn) {
									// console.debug('you clicked: ', btn);
									// }
									});

									operateNote.setValue(operateNote.getValue()
											+ "当前选择角色" + childParamName.value
											+ "\n");

								});

				var addOrg = Ext
						.create(
								'Ext.Button',
								{
									text : '提交',
									icon : '../image/edit.png',
									listeners : {
										click : function() {

											if (cmp.selectedGridId.length == 0) {
												Ext.Msg.alert('提示', '请选择一个机构');
												return false;
											}
											// if (cmp.selectedGridId.length >
											// 1) {
											// Ext.Msg.alert('提示', '请只选择一个机构');
											// return false;
											// }
											var url = '../services/org/bindOrg?desOrgId='
													+ cmp.selectedGridId
													+ '&scrOrgId='
													+ asyncTree2
															.getSelectionModel()
															.getLastSelected()
															.get('id');

											Ext.Ajax
													.request({
														url : url,
														method : 'GET',
														success : function(
																response, opts) {

															var obj = Ext
																	.decode(response.responseText);
															Ext.Msg
																	.alert(
																			'提示',
																			obj.message);

														},
														failure : function(
																form, action) {
															Ext.Msg.alert('提示',
																	'保存失败');
															return false;
														}
													});

										}

									}
								});

//				cmp.searchUrl = encodeURI('../services/common/load?model=Organization&conStr={"type":"2"}');
				// cmp.saveUrl = '../services/controller/save';
				// cmp.editUrl = '../services/controller/save';
				// cmp.delUrl = '../services/controller/del';
				// cmp.getUrl = '../services/controller/get?id=';
				tb.add(addOrg);
				cmp.getComponent('treePanel').setVisible(true);
				cmp.getComponent('treePanel').add(asyncTree2).doLayout();
				// tb.add(showRole);
				//dynamic add custom table
				cmp.afterRenderTable = function afterRenderTable(_child) {

					cmp.show();
					cmp.getComponent('dataPanel').add(_child);
					_child.setTitle('已分配分车单位');
					cmp.getComponent('dataPanel').doLayout();
				};
				cmp.createGrid('../services/org/getBindedOrg?model=1', '', cmp);
				cmp.gridTitle='可分配分车单位';
				cmp.searchUrl = '../services/org/getBindedOrg?model=0';
				cmp.search();

			}
		});
